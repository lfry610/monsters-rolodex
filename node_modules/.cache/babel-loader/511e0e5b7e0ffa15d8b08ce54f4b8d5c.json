{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lawrencefryer/web-dev/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [{\n        name: 'Frankenstein',\n        id: 'asc1'\n      }, {\n        name: 'Dracula',\n        id: 'asc2'\n      }, {\n        name: 'Zombie',\n        id: 'asc3'\n      }]\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setstate({\n      monsters: users\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monster => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [monster.name, \" \"]\n      }, monster.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrencefryer/web-dev/monsters-rolodex/src/App.js"],"names":["React","Component","render","App","constructor","state","monsters","name","id","componentDidMount","fetch","then","response","json","users","setstate","map","monster"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC3BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACR;AACGC,QAAAA,IAAI,EAAE,cADT;AAEGC,QAAAA,EAAE,EAAE;AAFP,OADQ,EAKR;AACGD,QAAAA,IAAI,EAAE,SADT;AAEGC,QAAAA,EAAE,EAAE;AAFP,OALQ,EASR;AACGD,QAAAA,IAAI,EAAE,QADT;AAEGC,QAAAA,EAAE,EAAE;AAFP,OATQ;AADC,KAAb;AAgBD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACT,MAAAA,QAAQ,EAAEQ;AAAX,KAAd,CAFf;AAGD;;AAEDZ,EAAAA,MAAM,GAAG;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEI,KAAKG,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwBC,OAAO,iBAC/B;AAAA,mBAAuBA,OAAO,CAACV,IAA/B;AAAA,SAAUU,OAAO,CAACT,EAAlB;AAAA;AAAA;AAAA;AAAA,cADA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQA;;AApC0B;;AAuC5B,eAAeL,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n constructor() {\n   super();\n   this.state = {\n     monsters: [\n       {\n          name: 'Frankenstein',\n          id: 'asc1'\n       },\n       {\n          name: 'Dracula',\n          id: 'asc2'\n       },\n       {\n          name: 'Zombie',\n          id: 'asc3'\n       }\n     ]\n   };\n }\n\n componentDidMount() {\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n   .then(users => this.setstate({monsters: users}));\n }\n \n render() {\n  return (\n    <div className=\"App\">\n      {\n        this.state.monsters.map(monster => (\n        <h1 key ={monster.id}>{monster.name} </h1>\n        ))}\n    </div>\n  );\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}